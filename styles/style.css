* {
  box-sizing: border-box;
}

:root {
  --text-size: 18px;
  --text-size-mobile: 16px;
  --bigger-text-size: 20px;
  --bigger-text-mobile-size: 18px;
  --title-text-mobile-size: 28px;
  --title-text-size: 40px;
  --prediction-text-size: min(9vh, 9vw);
  /* --prediction-text-size: min(3vh, 3vw); */
  --lemon: rgba(255, 255, 0, 0);
  --square-number: 96;
  --square-width: calc(var(--square-number) * 1vw);
  --square-height: calc(var(--square-number) * 1vh);
  --square-size: min(var(--square-width), var(--square-height));
  --divisions: 11;
  --cell-size: min(
    calc(var(--square-width) / var(--divisions)),
    calc(var(--square-height) / var(--divisions))
  );
}

html,
body {
  margin: 0;
  padding: 0;
  font-family: "Open Sans", monospace;
  font-size: var(--text-size-mobile);
  height: 100%;
}

aside {
  margin-top: 2em;
  font-size: var(--text-size-mobile);
}

footer {
  margin: 2em 0;
}

h1,
h2 {
  font-size: var(--title-text-mobile-size);
  font-family: "Space Mono", monospace;
  /* font-style: italic; */
  font-weight: 400;
}

h2 {
  margin-top: 2em;
}

canvas {
  margin: 0;
  padding: 0;
}
video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: 1;
}

#lemon-predictor {
  position: relative;
  width: 100%;
  height: var(--square-size);
  font-family: "Space Mono", monospace;
}

#canvas-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: var(--square-size);
}

.text-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: var(--square-size);
  font-size: calc(var(--prediction-text-size) * var(--square-number) / 100);
  /* mix-blend-mode: difference; */
  color: white;
  font-weight: 700;
}
.min-100-square {
  width: var(--square-size);
  height: var(--square-size);
}

.min-100-width {
  width: var(--square-size);
}

.lemon-container {
  padding-top: min(
    calc(var(--square-height) / 11 * 5),
    calc(var(--square-width) / 11 * 5)
  );
}

#lemon-2 {
  display: none;
}
#lemon-percentage-1,
#lemon-percentage-1-text {
  width: var(--square-size);
  /* padding: min(1vw, 1vh); */
  display: flex;
}
#lemon-percentage-1 span,
#lemon-percentage-1-text span {
  display: flex;
  width: var(--cell-size);
  height: var(--cell-size);
  line-height: var(--cell-size);
  padding: 0;
  margin: 0;
  overflow: hidden;

  justify-content: center;
  align-items: center;
  /* background-color: rgba(0, 0, 0, 0.2); */
}

.jumping-prediction-para {
  height: calc(5ch + 3 / 1vw);
  /* overflow: hidden; */
}
.container {
  width: var(--square-size);
  margin: 0 auto;
}
.full-width {
  /* flex-basis: 100%;
  width: 100%; */
}
.padded {
  padding: 10px;
}

#prediction {
  height: clamp(min(16vw, 16vh), 40px, min(18vw, 18vh));
  font-family: "Space Mono", monospace;
}
#prediction p {
  padding: 0;
  margin: 0;
}

.description {
  margin: 40px 0;
}
.lemon {
  background-color: var(--lemon);
}

.bigger-text {
  font-size: var(--bigger-text-mobile-size);
}

p {
  max-width: max(50%, 800px);
}

a {
  /* These are technically the same, but use both */
  overflow-wrap: break-word;
  word-wrap: break-word;

  -ms-word-break: break-all;
  /* This is the dangerous one in WebKit, as it breaks things wherever */
  word-break: break-all;
  /* Instead use this non-standard one: */
  word-break: break-word;

  /* Adds a hyphen where the word breaks, if supported (No Blink) */
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
  color: black;
}
img {
  width: 100%;
}
figure {
  margin: 0;
}
.visually-hidden {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

@media (min-width: 480px) {
  html,
  body {
    font-size: var(--text-size);
  }
  h1 {
    font-size: var(--title-text-size);
  }
  .bigger-text {
    font-size: var(--bigger-text-size);
  }
}
